name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure deployment directory exists
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} "mkdir -p /root/p2p-support-telegram-bot"

      - name: Copy docker-compose file to VPS
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.DROPLET_IP }}:/root/p2p-support-telegram-bot/

      - name: Deploy on VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/p2p-support-telegram-bot
            
            # Update .env file
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
            echo "ADMIN_CHAT_ID=${{ secrets.ADMIN_CHAT_ID }}" >> .env
            echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env
            echo "ENABLE_LOGGING=${{ secrets.ENABLE_LOGGING }}" >> .env
            
            # Login to GitHub Container Registry
            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u "${{ github.repository_owner }}" --password-stdin
            
            # Deploy with docker-compose
            docker-compose pull
            docker-compose up -d
          EOF
