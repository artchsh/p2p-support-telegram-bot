name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

permissions:
      packages: write
      contents: read

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        with:
          image_name: ${{ github.repository }} 
          github_token: ${{ github.token }}

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Ensure deployment directory exists
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} "mkdir -p /root/p2p-support-telegram-bot"

      - name: Copy docker-compose file to VPS
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ secrets.DROPLET_IP }}:/root/p2p-support-telegram-bot/

      - name: Deploy on VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
            cd /root/p2p-support-telegram-bot
            
            # Update .env file
            cat <<- EOT > .env
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            ADMIN_CHAT_ID=${{ secrets.ADMIN_CHAT_ID }}
            CHAT_ID=${{ secrets.CHAT_ID }}
            ENABLE_LOGGING=${{ secrets.ENABLE_LOGGING }}
            EOT
            
            # Login to GitHub Container Registry
            echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            
            # Deploy with docker-compose
            docker-compose pull
            docker-compose up -d
          EOF
