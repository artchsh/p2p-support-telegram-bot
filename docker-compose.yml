services:
  bot:
    image: ghcr.io/artchsh/p2p-support-telegram-bot:latest
    container_name: p2p-support-bot
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_HOST: db
      POSTGRES_DB: peer2peer
      FLASK_PORT: 5000
      ENVIRONMENT: production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15
    container_name: p2p-support-db
    restart: always
    environment:
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_USER: postgresuser
      POSTGRES_DB: peer2peer
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgresuser -d peer2peer"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
